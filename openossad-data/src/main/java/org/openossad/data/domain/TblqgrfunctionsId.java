package org.openossad.data.domain;

// Generated 03-oct-2010 22:27:17 by Hibernate Tools 3.2.4.GA

/**
 * TblqgrfunctionsId generated by hbm2java
 */
public class TblqgrfunctionsId implements java.io.Serializable {

	private Integer fid;
	private String name;
	private String expression;

	public TblqgrfunctionsId() {
	}

	public TblqgrfunctionsId(String name, String expression) {
		this.name = name;
		this.expression = expression;
	}

	public TblqgrfunctionsId(Integer fid, String name, String expression) {
		this.fid = fid;
		this.name = name;
		this.expression = expression;
	}

	public Integer getFid() {
		return this.fid;
	}

	public void setFid(Integer fid) {
		this.fid = fid;
	}

	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getExpression() {
		return this.expression;
	}

	public void setExpression(String expression) {
		this.expression = expression;
	}

	public boolean equals(Object other) {
		if ((this == other))
			return true;
		if ((other == null))
			return false;
		if (!(other instanceof TblqgrfunctionsId))
			return false;
		TblqgrfunctionsId castOther = (TblqgrfunctionsId) other;

		return ((this.getFid() == castOther.getFid()) || (this.getFid() != null
				&& castOther.getFid() != null && this.getFid().equals(
				castOther.getFid())))
				&& ((this.getName() == castOther.getName()) || (this.getName() != null
						&& castOther.getName() != null && this.getName()
						.equals(castOther.getName())))
				&& ((this.getExpression() == castOther.getExpression()) || (this
						.getExpression() != null
						&& castOther.getExpression() != null && this
						.getExpression().equals(castOther.getExpression())));
	}

	public int hashCode() {
		int result = 17;

		result = 37 * result
				+ (getFid() == null ? 0 : this.getFid().hashCode());
		result = 37 * result
				+ (getName() == null ? 0 : this.getName().hashCode());
		result = 37
				* result
				+ (getExpression() == null ? 0 : this.getExpression()
						.hashCode());
		return result;
	}

}
